"use strict";particlesJS("particles",{particles:{number:{value:120,density:{enable:!0,value_area:800}},color:{value:"#ffffff"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"img/github.svg",width:100,height:100}},opacity:{value:.5,random:!1,anim:{enable:!1,speed:1,opacity_min:.1,sync:!1}},size:{value:5,random:!0,anim:{enable:!1,speed:40,size_min:.1,sync:!1}},line_linked:{enable:!0,distance:150,color:"#ffffff",opacity:.4,width:1},move:{enable:!0,speed:6,direction:"none",random:!1,straight:!1,out_mode:"out",attract:{enable:!1,rotateX:600,rotateY:1200}}},interactivity:{detect_on:"canvas",events:{onhover:{enable:!0,mode:"repulse"},onclick:{enable:!0,mode:"push"},resize:!0},modes:{grab:{distance:400,line_linked:{opacity:1}},bubble:{distance:400,size:40,duration:2,opacity:8,speed:3},repulse:{distance:200},push:{particles_nb:4},remove:{particles_nb:2}}},retina_detect:!0,config_demo:{hide_card:!1,background_color:"#b61924",background_image:"",background_position:"50% 50%",background_repeat:"no-repeat",background_size:"cover"}});var load=function(){setTimeout(function(){document.querySelector("body").classList.add("loaded")},500);var e=document.querySelector("#loader-wrapper"),t=document.querySelector("main.main"),n=function(){["transitionend","webkitTransitionEnd","mozTransitionEnd","oTransitionEnd"].forEach(function(t){e.addEventListener(t,function(){e.style.display="none","none"===e.style.display&&i()},!1)})},i=function(){t.setAttribute("style","visibility: visible; opacity: 1")};n()},header=function(){var e=function(){var e=document.querySelector(".header__bg"),t=document.querySelector(".header__intro"),n=document.querySelector("header.header").nextSibling.nextElementSibling.offsetTop;window.addEventListener("scroll",function(){if(n>=window.pageYOffset){var i=document.querySelector("body").scrollTop;$(e).css({top:-(i/10)+"%"}),$(t).css({top:(50+i/40).toFixed(2)+"%"})}})},t=function(){$(".typed").typed({strings:["My name is A. Kierski","I'm a front-end developer","I love simplicity"],typeSpeed:100,backDelay:900,loop:!0})},n=function(){var e=document.querySelector(".indicator"),t=document.querySelector("header.header").nextSibling.nextElementSibling,n=t.offsetTop,i=document.querySelector("header.header"),o=i.offsetTop;window.addEventListener("scroll",function(){n/2>=window.pageYOffset?e.classList.remove("indicator--animate"):e.classList.add("indicator--animate"),a()}),e.addEventListener("click",function(t){t.preventDefault(),e.href.substr(this.href.lastIndexOf("/")+1)===i.id?$("html,body").animate({scrollTop:o},500):$("html,body").animate({scrollTop:n},500),e.classList.toggle("indicator--animate"),a()});var a=function(){e.classList.contains("indicator--animate")?e.href=i.id:e.href=t.id}};e(),t(),n()},skillbar=function(){var e=$(".about__skills--countbar"),t=!0;$(window).scroll(function(){var n=$(window).scrollTop(),i=$("#about").offset().top;n>=i/1.5&&t&&($(e).each(function(){$(this).animate({width:$(this).attr("data-percent")},3e3)}),t=!1)})};document.addEventListener("DOMContentLoaded",function(e){load(),header(),skillbar()}),console.log("Hi there! ðŸ˜˜ ");
//# sourceMappingURL=data:application/json;charset=utf8;base64,
